@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "~/Views/Dashboard/_WeddingPlannerLayout.cshtml";
    ViewData["Title"] = "Wedding Dashboard";
}


@model Couple

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<div class="row mb-4">
    <!-- Budget Overview -->
    @if (Model.Budgets != null)
    {
        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Budget Overview</h5>
                </div>
                <div class="card-body">
                    @{
                        var budgetPercentage = (Model.Budgets.AllocatedAmount > 0)
                        ? (Model.Budgets.SpentAmount / Model.Budgets.AllocatedAmount) * 100
                        : 0;
                    }

                    <div class="progress mb-3">
                        <div class="progress-bar" role="progressbar"
                             style="width:@budgetPercentage%"
                             aria-valuenow="@Model.Budgets.SpentAmount"
                             aria-valuemin="0"
                             aria-valuemax="@Model.Budgets.AllocatedAmount">
                        </div>
                    </div>

                    <div class="d-flex justify-content-between">
                        <span>Total Budget:</span>
                        <span>$@Model.Budgets.AllocatedAmount.ToString("#,##0.00")</span>
                    </div>
                    <div class="d-flex justify-content-between">
                        <span>Spent:</span>
                        <span>$@Model.Budgets.SpentAmount.ToString("#,##0.00")</span>
                    </div>
                    <div class="d-flex justify-content-between fw-bold">
                        <span>Remaining:</span>
                        <span>$@((Model.Budgets.AllocatedAmount - Model.Budgets.SpentAmount).ToString("#,##0.00"))</span>
                    </div>
                    <button type="button" class="btn btn-sm btn-outline-primary mt-3" data-bs-toggle="modal" data-bs-target="#budgetModal">
                        Manage Budget
                    </button>
                </div>
            </div>
        </div>
    }

    <!-- To Do -->
    <div class="col-md-6">
        <div class="card">
            <div class="card-header bg-info text-white">
                <h5 class="mb-0">ToDo</h5>
            </div>
            <div class="card-body">

                @if (Model.Checklists != null && Model.Checklists.Count >0 )
                {
                    
                    <ul class="list-group">
                        @foreach (var checklist in Model.Checklists.OrderBy(d => d.DueDate).Take(5))
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <div>
                                    <strong>@checklist.TaskName</strong>
                                    <br />
                                    <small>@checklist.DueDate.ToString("MMM d, yyyy")</small>
                                </div>
                                <span class="badge @(checklist.IsCompleted ? "bg-success" : (checklist.DueDate < DateTime.Today ? "bg-danger" : "bg-primary")) rounded-pill">
                                    @((checklist.DueDate - DateTime.Today).Days) days
                                </span>
                            </li>
                        }
                    </ul>
                    <button type="button" class="btn btn-sm btn-outline-info mt-3" data-bs-toggle="modal" data-bs-target="#todoModal">
                        View All
                    </button>
                }
                
                else
                {

                    <span>ToDo list empty!</span>

                }

            </div>
        </div>
    </div>
</div>

<div class="row mb-4">
    <!-- Planning Progress -->
    <div class="col-md-6">
        <div class="card">
            <div class="card-header bg-success text-white">
                <h5 class="mb-0">Planning Progress</h5>
            </div>
            <div class="card-body">
                @{
                    var totalTasks = Model.Checklists.Count(c => !c.IsDeleted);
                    var completedTasks = Model.Checklists.Count(c => c.IsCompleted && !c.IsDeleted);
                    var progressPercentage = totalTasks > 0 ? (completedTasks * 100) / totalTasks : 0;
                }

                <div class="progress mb-3">
                    <div class="progress-bar bg-success" role="progressbar"
                         style="width: @progressPercentage%"
                         aria-valuenow="@progressPercentage" aria-valuemin="0" aria-valuemax="100">
                        @progressPercentage%
                    </div>
                </div>

                <div class="d-flex justify-content-between">
                    <span>Completed Tasks:</span>
                    <span>@completedTasks / @totalTasks</span>
                </div>

                <button type="button" class="btn btn-sm btn-outline-success mt-3" data-bs-toggle="modal" data-bs-target="#tasksModal">
                    Manage Tasks
                </button>
            </div>
        </div>
    </div>

    

    <!-- Wedding Timeline -->
    <div class="col-md-6">
        <div class="card">
            <div class="card-header bg-warning text-dark">
                <h5 class="mb-0">Wedding Timeline</h5>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th>Event</th>
                                <th>Date & Time</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Timelines != null && Model.Timelines.Any(x => !x.IsDeleted))
                            {
                                @foreach (var timeline in Model.Timelines.Where(x => !x.IsDeleted).OrderBy(x => x.EventTime).Take(5))
                                {
                                    <tr>
                                        <td>
                                            <strong>@timeline.EventName</strong>
                                            <small class="d-block text-muted">@timeline.EventDescription</small>
                                        </td>
                                        <td>@timeline.EventTime.ToString("MMM d, yyyy h:mm tt")</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="2" class="text-center">No timeline events added yet.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <button type="button" class="btn btn-sm btn-outline-warning mt-3" data-bs-toggle="modal" data-bs-target="#timelineModal">
                    Manage Timeline
                </button>
            </div>
        </div>
    </div>

<!--Modals-->

<!-- Add Task Modal -->
<div class="modal fade" id="addTaskModal" tabindex="-1" aria-labelledby="addTaskModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header bg-info text-white">
        <h5 class="modal-title" id="addTaskModalLabel">Add New Task</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
            <form asp-controller="Dashboard" asp-action="AddChecklist" method="post">
        <div class="modal-body">
          <input type="hidden" class="form-control" id="taskStatus" name="TaskStatus" value="Pending">
          <input type="hidden" class="form-control" id="coupleId" name="CoupleId" value="@Model.Id">
          

          <div class="mb-3">
            <label for="taskName" class="form-label">Task Name</label>
            <input type="text" class="form-control" id="taskName" name="TaskName" required>
          </div>         
          <div class="mb-3">
             <label for="taskDescription" class="form-label">Description</label>
             <input type="text" class="form-control" id="taskDescription" name="TaskDescription" required>
          </div>
          <div class="mb-3">
            <label for="dueDate" class="form-label">Due Date</label>
            <input type="date" class="form-control" id="dueDate" name="DueDate" required>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-info">Add Task</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Edit Task Modal -->
<div class="modal fade" id="editTaskModal" tabindex="-1" aria-labelledby="editTaskModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header bg-primary text-white">
        <h5 class="modal-title" id="editTaskModalLabel">Edit Task</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
        <form asp-controller="Dashboard" asp-action="UpdateChecklist" method="post">
        <div class="modal-body">
          <input type="hidden" id="editTaskId" name="Id">
          <div class="mb-3">
            <label for="editTaskName" class="form-label">Task Name</label>
            <input type="text" class="form-control" id="editTaskName" name="TaskName" required>
          </div>
          <div class="mb-3">
            <label for="editDueDate" class="form-label">Due Date</label>
            <input type="date" class="form-control" id="editDueDate" name="DueDate" required>
          </div>
                    <div class="mb-3 form-check">
                        <input type="checkbox" class="form-check-input" id="editIsCompleted" name="IsCompleted" value="true">
                        <label class="form-check-label" for="editIsCompleted">Mark as Completed</label>
                    </div>
                    <!-- Move this below the checkbox -->
                    <input type="hidden" name="IsCompleted" value="false" />
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-primary">Save Changes</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Delete Task Modal -->
<div class="modal fade" id="deleteTaskModal" tabindex="-1" aria-labelledby="deleteTaskModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header bg-danger text-white">
        <h5 class="modal-title" id="deleteTaskModalLabel">Delete Task</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
            <form asp-controller="Dashboard" asp-action="DeleteChecklist" method="post">
        <div class="modal-body">
          <input type="hidden" id="deleteTaskId" name="Id">
          <p>Are you sure you want to delete the task "<span id="deleteTaskName"></span>"?</p>
          <p class="text-danger">This action cannot be undone.</p>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-danger">Delete</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!--Task inprog modal-->
<div class="modal fade" id="tasksModal" tabindex="-1" aria-labelledby="todoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-info text-white">
                <h5 class="modal-title" id="todoModalLabel">All To-Do Items</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Completed</th>
                                <th>Task</th>
                                <th>Due Date</th>
                                <th>Days Left</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var checklist in Model.Checklists.OrderBy(d => d.IsCompleted).ThenBy(d => d.DueDate))
                            {
                                <tr class="@(checklist.IsCompleted ? "table-success" : (checklist.DueDate < DateTime.Today ? "table-danger" : ""))">
                                    <td>
                                        <div class="form-check">
                                            <input class="form-check-input task-checkbox"
                                                   type="checkbox"
                                                   id="task-@checklist.Id"
                                                   data-task-id="@checklist.Id"
                                            @(checklist.IsCompleted ? "checked" : "")>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="@(checklist.IsCompleted ? "text-decoration-line-through" : "")">@checklist.TaskName</span>
                                    </td>
                                    <td>@checklist.DueDate.ToString("MMM d, yyyy")</td>
                                    <td>
                                        <span class="badge @(checklist.IsCompleted ? "bg-success" : (checklist.DueDate < DateTime.Today ? "bg-danger" : "bg-primary")) rounded-pill">
                                            @((checklist.DueDate - DateTime.Today).Days) days
                                        </span>
                                    </td>
                                    <td>
                                        <button class="btn btn-sm btn-outline-primary edit-task-btn"
                                                data-bs-toggle="modal"
                                                data-bs-target="#editTaskModal"
                                                data-id="@checklist.Id"
                                                data-task="@checklist.TaskName"
                                                data-due-date="@checklist.DueDate.ToString("yyyy-MM-dd")"
                                                data-is-completed="@checklist.IsCompleted.ToString().ToLower()">
                                            <i class="bi bi-pencil"></i> Edit
                                        </button>
                                        <button class="btn btn-sm btn-outline-danger delete-task-btn"
                                                data-bs-toggle="modal"
                                                data-bs-target="#deleteTaskModal"
                                                data-id="@checklist.Id"
                                                data-task="@checklist.TaskName">
                                            <i class="bi bi-trash"></i> Delete
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="d-flex justify-content-between align-items-center mt-3">
                    <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#addTaskModal">
                        Add New Task
                    </button>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!--ToDo list modal-->
<div class="modal fade" id="todoModal" tabindex="-1" aria-labelledby="todoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-info text-white">
                <h5 class="modal-title" id="todoModalLabel">All To-Do Items</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Status</th>
                                <th>Task</th>
                                <th>Due Date</th>
                                <th>Days Left</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var checklist in Model.Checklists.OrderBy(d => d.IsCompleted).ThenBy(d => d.DueDate))
                            {
                                <tr class="@(checklist.IsCompleted ? "table-success" : (checklist.DueDate < DateTime.Today ? "table-danger" : ""))">
                                    <td>
                                        <div class="form-check">
                                            <input class="form-check-input task-checkbox"
                                                   type="checkbox"
                                                   id="task-@checklist.Id"
                                                   data-task-id="@checklist.Id"
                                            @(checklist.IsCompleted ? "checked" : "")>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="@(checklist.IsCompleted ? "text-decoration-line-through" : "")">@checklist.TaskName</span>
                                    </td>
                                    <td>@checklist.DueDate.ToString("MMM d, yyyy")</td>
                                    <td>
                                        <span class="badge @(checklist.IsCompleted ? "bg-success" : (checklist.DueDate < DateTime.Today ? "bg-danger" : "bg-primary")) rounded-pill">
                                            @((checklist.DueDate - DateTime.Today).Days) days
                                        </span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="d-flex justify-content-between align-items-center mt-3">
                    <div>
                        <span class="badge bg-danger me-2"></span> Overdue
                        <span class="badge bg-primary mx-2"></span> Upcoming
                        <span class="badge bg-success mx-2"></span> Completed
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

    <!-- Budget Management Modal -->
    <div class="modal fade" id="budgetModal" tabindex="-1" aria-labelledby="budgetModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="budgetModalLabel">Manage Budget</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-controller="Dashboard" asp-action="UpdateBudjet" method="post">
                    <div class="modal-body">
                        <input type="hidden" id="modifyBudgjetId" name="Id" value="@Model.Budgets.Id">

                        <div class="mb-3">
                            <label for="allocatedAmount" class="form-label">Total Budget ($)</label>
                            <input type="number" class="form-control" id="allocatedAmount" name="AllocatedAmount"
                                   value="@Model.Budgets.AllocatedAmount" step="0.01" min="0" required>
                            <small class="text-muted">Current budget: $@Model.Budgets.AllocatedAmount.ToString("#,##0.00")</small>
                        </div>

                        <div class="budget-summary mt-4">
                            <h6>Budget Summary</h6>
                            <div class="d-flex justify-content-between">
                                <span>Total Budget:</span>
                                <span>$@Model.Budgets.AllocatedAmount.ToString("#,##0.00")</span>
                            </div>
                            <div class="d-flex justify-content-between">
                                <span>Spent Amount:</span>
                                <span>$@Model.Budgets.SpentAmount.ToString("#,##0.00")</span>
                            </div>
                            <div class="d-flex justify-content-between font-weight-bold">
                                <span>Remaining:</span>
                                <span>$@((Model.Budgets.AllocatedAmount - Model.Budgets.SpentAmount).ToString("#,##0.00"))</span>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Add Timeline Modal -->
    <div class="modal fade" id="addTimelineModal" tabindex="-1" aria-labelledby="addTimelineModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-warning text-dark">
                    <h5 class="modal-title" id="addTimelineModalLabel">Add Timeline Event</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
            <form asp-controller="Dashboard" asp-action="AddTimeline" method="post">
                    <div class="modal-body">
                    <input type="hidden" class="form-control" id="coupleId" name="CoupleId" value="@Model.Id" required>

                        <div class="mb-3">
                            <label for="eventName" class="form-label">Event Name</label>
                            <input type="text" class="form-control" id="eventName" name="EventName" required>
                        </div>
                        <div class="mb-3">
                            <label for="eventTime" class="form-label">Event Date & Time</label>
                            <input type="datetime-local" class="form-control" id="eventTime" name="EventTime" required>
                        </div>
                        <div class="mb-3">
                            <label for="eventDescription" class="form-label">Description</label>
                            <textarea class="form-control" id="eventDescription" name="EventDescription" rows="3"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-warning">Add Event</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Edit Timeline Modal -->
    <div class="modal fade" id="editTimelineModal" tabindex="-1" aria-labelledby="editTimelineModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="editTimelineModalLabel">Edit Timeline Event</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-controller="Dashboard" asp-action="UpdateTimeline" method="post">
                    <div class="modal-body">
                        <input type="hidden" id="editTimelineId" name="Id">
                        <div class="mb-3">
                            <label for="editEventName" class="form-label">Event Name</label>
                            <input type="text" class="form-control" id="editEventName" name="EventName" required>
                        </div>
                        <div class="mb-3">
                            <label for="editEventTime" class="form-label">Event Date & Time</label>
                            <input type="datetime-local" class="form-control" id="editEventTime" name="EventTime" required>
                        </div>
                        <div class="mb-3">
                            <label for="editEventDescription" class="form-label">Description</label>
                            <textarea class="form-control" id="editEventDescription" name="EventDescription" rows="3"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Timeline Management Modal -->
    <div class="modal fade" id="timelineModal" tabindex="-1" aria-labelledby="timelineModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-warning text-dark">
                    <h5 class="modal-title" id="timelineModalLabel">Wedding Timeline Events</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Event</th>
                                    <th>Date & Time</th>
                                    <th>Description</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var timeline in Model.Timelines.Where(x => !x.IsDeleted).OrderBy(x => x.EventTime))
                                {
                                    <tr>
                                        <td>
                                            <strong>@timeline.EventName</strong>
                                        </td>
                                        <td>@timeline.EventTime.ToString("MMM d, yyyy h:mm tt")</td>
                                        <td>@timeline.EventDescription</td>
                                        <td>
                                            <button class="btn btn-sm btn-outline-primary edit-timeline-btn"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#editTimelineModal"
                                                    data-id="@timeline.Id"
                                                    data-event="@timeline.EventName"
                                                    data-time="@timeline.EventTime.ToString("yyyy-MM-ddTHH:mm")"
                                                    data-description="@timeline.EventDescription">
                                                <i class="bi bi-pencil"></i> Edit
                                            </button>
                                            <button class="btn btn-sm btn-outline-danger delete-timeline-btn"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#deleteTimelineModal"
                                                    data-id="@timeline.Id"
                                                    data-event="@timeline.EventName">
                                                <i class="bi bi-trash"></i> Delete
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="d-flex justify-content-between align-items-center mt-3">
                        <button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#addTimelineModal">
                            Add New Event
                        </button>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Timeline Modal -->
    <div class="modal fade" id="addTimelineModal" tabindex="-1" aria-labelledby="addTimelineModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-warning text-dark">
                    <h5 class="modal-title" id="addTimelineModalLabel">Add New Timeline Event</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-controller="Dashboard" asp-action="AddTimeline" method="post">
                    <div class="modal-body">
                        <input type="hidden" class="form-control" id="coupleId" name="CoupleId" value="@Model.Id">

                        <div class="mb-3">
                            <label for="eventName" class="form-label">Event Name</label>
                            <input type="text" class="form-control" id="eventName" name="EventName" required>
                        </div>
                        <div class="mb-3">
                            <label for="eventTime" class="form-label">Date & Time</label>
                            <input type="datetime-local" class="form-control" id="eventTime" name="EventTime" required>
                        </div>
                        <div class="mb-3">
                            <label for="eventDescription" class="form-label">Description</label>
                            <textarea class="form-control" id="eventDescription" name="EventDescription" rows="3"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-warning">Add Event</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Edit Timeline Modal -->
    <div class="modal fade" id="editTimelineModal" tabindex="-1" aria-labelledby="editTimelineModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="editTimelineModalLabel">Edit Timeline Event</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-controller="Dashboard" asp-action="UpdateTimeline" method="post">
                    <div class="modal-body">
                        <input type="hidden" id="editTimelineId" name="Id">

                        <div class="mb-3">
                            <label for="editEventName" class="form-label">Event Name</label>
                            <input type="text" class="form-control" id="editEventName" name="EventName" required>
                        </div>
                        <div class="mb-3">
                            <label for="editEventTime" class="form-label">Date & Time</label>
                            <input type="datetime-local" class="form-control" id="editEventTime" name="EventTime" required>
                        </div>
                        <div class="mb-3">
                            <label for="editEventDescription" class="form-label">Description</label>
                            <textarea class="form-control" id="editEventDescription" name="EventDescription" rows="3"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Delete Timeline Modal -->
    <div class="modal fade" id="deleteTimelineModal" tabindex="-1" aria-labelledby="deleteTimelineModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="deleteTimelineModalLabel">Delete Timeline Event</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-controller="Dashboard" asp-action="DeleteTimeline" method="post">
                    <div class="modal-body">
                        <input type="hidden" id="deleteTimelineId" name="Id">
                        <p>Are you sure you want to delete the event "<span id="deleteTimelineEvent"></span>"?</p>
                        <p class="text-danger">This action cannot be undone.</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


@section Scripts {
    <script>
            //Budgjet detail modal

            document.querySelectorAll('.edit-budget-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const id = this.dataset.id;
                    const amount = this.dataset.amount;

                    document.getElementById('modifyBudgjetId').value = id;
                    document.getElementById('allocatedAmount').value = parseFloat(amount).toFixed(2);
                });
            });


        //Task inprog > delete modal
        document.addEventListener("DOMContentLoaded", function() {
            const deleteButtons = document.querySelectorAll(".delete-task-btn");

            deleteButtons.forEach(button => {
                button.addEventListener("click", function() {
                    const taskId = this.dataset.id;
                    const taskName = this.dataset.task;

                    document.getElementById("deleteTaskId").value = taskId;
                    document.getElementById("deleteTaskName").textContent = taskName;
                });
            });
        });

        //Task inprog > edit modal
        document.addEventListener("DOMContentLoaded", function() {
            const editButtons = document.querySelectorAll(".edit-task-btn");

            editButtons.forEach(button => {
                button.addEventListener("click", function() {
                    const taskId = this.dataset.id;
                    const taskName = this.dataset.task;
                    const dueDate = this.dataset.dueDate;
                    const isCompleted = this.dataset.isCompleted === "true";
                    console.log("isCompleted parsed:", isCompleted);
                    // Populate modal fields
                    document.getElementById("editTaskId").value = taskId;
                    document.getElementById("editTaskName").value = taskName;
                    document.getElementById("editDueDate").value = dueDate;
                    document.getElementById("editIsCompleted").checked = isCompleted;
                });
            });
        });

        document.addEventListener('DOMContentLoaded', function() {
            // Setup Edit Modal
            var editTaskModal = document.getElementById('editTaskModal');
            if (editTaskModal) {
                editTaskModal.addEventListener('show.bs.modal', function(event) {
                    var button = event.relatedTarget;
                    var id = button.getAttribute('data-id');
                    var task = button.getAttribute('data-task');
                    var dueDate = button.getAttribute('data-due-date');
                    var isCompleted = button.getAttribute('data-is-completed') === "true"; // convert to boolean

                    var modal = this;
                    modal.querySelector('#editTaskId').value = id;
                    modal.querySelector('#editTaskName').value = task;
                    modal.querySelector('#editDueDate').value = dueDate;
                    modal.querySelector('#editIsCompleted').checked = isCompleted;
                });
            }

            // Timeline > Delete Modal
            var deleteTimelineModal = document.getElementById('deleteTimelineModal');
            if (deleteTimelineModal) {
                deleteTimelineModal.addEventListener('show.bs.modal', function(event) {
                    var button = event.relatedTarget;
                    var id = button.getAttribute('data-id');
                    var event = button.getAttribute('data-event');

                    var modal = this;
                    modal.querySelector('#deleteTimelineId').value = id;
                    modal.querySelector('#deleteEventName').textContent = event;
                });
            }
        });

            $(document).ready(function() {
                // Handle edit timeline button click
                $('.edit-timeline-btn').click(function() {
                    var id = $(this).data('id');
                    var eventName = $(this).data('event');
                    var eventTime = $(this).data('time');
                    var description = $(this).data('description');

                    $('#editTimelineId').val(id);
                    $('#editEventName').val(eventName);
                    $('#editEventTime').val(eventTime);
                    $('#editEventDescription').val(description);

                    // Prevent timelineModal from closing
                    $('#editTimelineModal').on('show.bs.modal', function(e) {
                        e.stopPropagation();
                    });
                });

                // Handle delete timeline button click
                $('.delete-timeline-btn').click(function() {
                    var id = $(this).data('id');
                    var eventName = $(this).data('event');

                    $('#deleteTimelineId').val(id);
                    $('#deleteTimelineEvent').text(eventName);

                    // Prevent timelineModal from closing
                    $('#deleteTimelineModal').on('show.bs.modal', function(e) {
                        e.stopPropagation();
                    });
                });

                // When the add/edit/delete modals are hidden, refresh the page
                $('#addTimelineModal, #editTimelineModal, #deleteTimelineModal').on('hidden.bs.modal', function() {
                    if ($(this).data('bs.modal') && $(this).data('bs.modal').isShown === false) {
                        // Only refresh if this modal was actually hidden, not if a child modal was opened
                        if (!$('.modal:visible').length) {
                            // location.reload();
                        }
                    }
                });
            });

        // jQuery code to move modals to end of body
        $(document).ready(function() {
            // Move all modals to the end of the body
            $('#budgetModal, #addTimelineModal, #editTimelineModal, #deleteTimelineModal, #todoModal, #tasksModal').appendTo('body');
        });
    </script>
}